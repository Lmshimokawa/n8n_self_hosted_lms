version: '3.8'

# ==========================================
# n8n Self-Hosted Stack - Production Ready
# ==========================================
# Baseado nas melhores práticas oficiais n8n
# Autor: Cursor AI Assistant
# Data: 2025
# ==========================================

services:
  # ==========================================
  # PostgreSQL Database - Recomendado para produção
  # ==========================================
  postgres:
    image: postgres:15-alpine
    container_name: n8n_postgres
    restart: unless-stopped
    
    environment:
      # Configurações do banco (personalize no .env)
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
      POSTGRES_USER: ${POSTGRES_USER:-n8n_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-n8n_password_change_me}
      
    volumes:
      # Volume persistente para dados do PostgreSQL
      - postgres_data:/var/lib/postgresql/data
      
    ports:
      # Porta exposta apenas localmente (segurança)
      - "127.0.0.1:5432:5432"
      
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-n8n_user} -d ${POSTGRES_DB:-n8n}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ==========================================
  # n8n Workflow Automation Platform
  # ==========================================
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n_main
    restart: unless-stopped
    
    depends_on:
      postgres:
        condition: service_healthy
        
    environment:
      # ==========================================
      # Configurações de Banco de Dados
      # ==========================================
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB:-n8n}
      DB_POSTGRESDB_USER: ${POSTGRES_USER:-n8n_user}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD:-n8n_password_change_me}
      
      # ==========================================
      # Configurações de Host e Rede
      # ==========================================
      N8N_HOST: ${N8N_HOST:-localhost}
      N8N_PORT: 5678
      N8N_PROTOCOL: ${N8N_PROTOCOL:-http}
      WEBHOOK_URL: ${WEBHOOK_URL:-http://localhost:5678/}
      
      # ==========================================
      # Timezone e Localização
      # ==========================================
      GENERIC_TIMEZONE: ${TIMEZONE:-America/Sao_Paulo}
      TZ: ${TIMEZONE:-America/Sao_Paulo}
      
      # ==========================================
      # Segurança e Criptografia
      # ==========================================
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY:-your_super_secret_encryption_key_change_me_32_chars}
      
      # ==========================================
      # Autenticação Básica (opcional)
      # ==========================================
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE:-false}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD:-admin}
      
      # ==========================================
      # Performance e Execução
      # ==========================================
      NODE_ENV: production
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL:-info}
      
      # Limpeza automática de dados antigos (importante para MVPs)
      EXECUTIONS_DATA_PRUNE: ${EXECUTIONS_DATA_PRUNE:-true}
      EXECUTIONS_DATA_MAX_AGE: ${EXECUTIONS_DATA_MAX_AGE:-720}  # 30 dias em horas
      
      # ==========================================
      # Escalabilidade Futura
      # ==========================================
      # Preparado para worker mode quando necessário
      N8N_RUNNERS_ENABLED: ${N8N_RUNNERS_ENABLED:-false}
      # N8N_WORKER_ENABLED: ${N8N_WORKER_ENABLED:-false}  # Descomentar para worker mode
      
      # ==========================================
      # Permissões de Código (para automações avançadas)
      # ==========================================
      NODE_FUNCTION_ALLOW_EXTERNAL: ${NODE_FUNCTION_ALLOW_EXTERNAL:-axios,lodash,moment}
      NODE_FUNCTION_ALLOW_BUILTIN: ${NODE_FUNCTION_ALLOW_BUILTIN:-fs,path,crypto}
      
    ports:
      # Porta do n8n (modificável via .env)
      - "${N8N_PORT:-5678}:5678"
      
    volumes:
      # Volume persistente principal do n8n (CRÍTICO)
      - n8n_data:/home/node/.n8n
      
      # Diretório para arquivos compartilhados (Read/Write Files from Disk)
      - ./shared-files:/files
      
      # # Volume para nodes personalizados (opcional)
      # - ./custom-nodes:/data/custom-nodes
      
    # Configurações de recursos (opcional, ajustar conforme necessário)
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1G
    #       cpus: '0.5'

  # ==========================================
  # Nginx Reverse Proxy (opcional, para produção)
  # ==========================================
  # Descomente se quiser SSL/HTTPS automático
  # nginx:
  #   image: nginx:alpine
  #   container_name: n8n_nginx
  #   restart: unless-stopped
  #   
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #     
  #   depends_on:
  #     - n8n

# ==========================================
# Volumes Persistentes
# ==========================================
volumes:
  # Volume principal do n8n (workflows, credenciais, configurações)
  n8n_data:
    name: ${PROJECT_NAME:-n8n_project}_n8n_data
    
  # Volume do PostgreSQL (dados do banco)
  postgres_data:
    name: ${PROJECT_NAME:-n8n_project}_postgres_data

# ==========================================
# Rede (opcional, para isolamento)
# ==========================================
networks:
  default:
    name: ${PROJECT_NAME:-n8n_project}_network