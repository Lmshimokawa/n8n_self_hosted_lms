# ==========================================
# n8n Self-Hosted - Template de Configurações
# ==========================================
# INSTRUÇÕES:
# 1. Copie este arquivo como .env: cp env.template .env
# 2. Edite as configurações no arquivo .env
# 3. Nunca commit o arquivo .env (apenas este template)
# ==========================================

# ==========================================
# CONFIGURAÇÕES DO PROJETO
# ==========================================
PROJECT_NAME=meu_n8n_project

# ==========================================
# CONFIGURAÇÕES DO BANCO DE DADOS
# ==========================================
# IMPORTANTE: Mude as credenciais padrão para segurança!
POSTGRES_DB=n8n_production
POSTGRES_USER=n8n_admin
POSTGRES_PASSWORD=super_secret_password_change_me_123!

# ==========================================
# CONFIGURAÇÕES DO n8n HOST
# ==========================================
# Para desenvolvimento local, use localhost
# Para produção, use seu domínio (exemplo: n8n.meusite.com)
N8N_HOST=localhost
N8N_PORT=5678
N8N_PROTOCOL=http

# URL completa para webhooks (importante para integrações externas)
# Desenvolvimento: http://localhost:5678/
# Produção: https://n8n.meusite.com/
WEBHOOK_URL=http://localhost:5678/

# ==========================================
# TIMEZONE E LOCALIZAÇÃO
# ==========================================
# Timezone para agendamentos (cron jobs, triggers)
# Exemplos: America/Sao_Paulo, America/New_York, Europe/London
TIMEZONE=America/Sao_Paulo

# ==========================================
# SEGURANÇA E CRIPTOGRAFIA
# ==========================================
# CRÍTICO: Gere uma chave de 32 caracteres única para criptografia
# Use: openssl rand -hex 16
# OU: node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
N8N_ENCRYPTION_KEY=2b2a8179391ed1c222aec69ba456cdb0

# ==========================================
# AUTENTICAÇÃO BÁSICA (Opcional)
# ==========================================
# Ative para proteger o acesso ao n8n
N8N_BASIC_AUTH_ACTIVE=false
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=secure_password_here

# ==========================================
# LOGS E PERFORMANCE
# ==========================================
# Níveis: error, warn, info, debug
N8N_LOG_LEVEL=info

# Limpeza automática de execuções antigas
# true = ativa, false = desativa
EXECUTIONS_DATA_PRUNE=true

# Máximo de horas para manter dados de execução (720h = 30 dias)
EXECUTIONS_DATA_MAX_AGE=720

# ==========================================
# ESCALABILIDADE FUTURA
# ==========================================
# Runners para horizontal scaling (deixe false inicialmente)
N8N_RUNNERS_ENABLED=false

# Worker mode para processar workflows separadamente
# N8N_WORKER_ENABLED=false

# ==========================================
# PERMISSÕES DE CÓDIGO
# ==========================================
# Bibliotecas externas permitidas no Code node
NODE_FUNCTION_ALLOW_EXTERNAL=axios,lodash,moment,uuid,crypto-js

# Módulos built-in do Node.js permitidos
NODE_FUNCTION_ALLOW_BUILTIN=fs,path,crypto,url,querystring

# ==========================================
# CONFIGURAÇÕES AVANÇADAS (Opcional)
# ==========================================
# Configurações de memória para workflows pesados
# N8N_PAYLOAD_SIZE_MAX=16
# N8N_METRICS=true

# ==========================================
# DESENVOLVIMENTO LOCAL (Opcional)
# ==========================================
# Para tunnel de desenvolvimento (APENAS para testes locais)
# N8N_TUNNEL_SUBDOMAIN=meu-projeto-teste